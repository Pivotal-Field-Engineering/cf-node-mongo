<div class="row-fluid">
    <div class="span12">
        <img class="about-icon" src="img/download.png" width="50">
        <h4>Download the source code</h4>
        <p>The source code for this application is available in <a
        href="https://github.com/kingfadzi/nodecellar">this repository</a> on GitHub.</p>
    </div>
</div>

<br/>

<div class="row-fluid">
    <div class="span12">
        <img class="about-icon" src="img/discuss.png" width="50" style="float: left;">
        <h4>Comments and questions</h4>
        <p>I love to hear your feedback. Post your questions and comments on the blog post associated with this
            application.</p>
    </div>
</div>

<br/>


<div class="row-fluid">
    <div class="span12">
        <img class="about-icon" src="img/twitter.png" width="50" style="float: left;">
        <h4>Follow me on Twitter</h4>
        <p><a href="http://twitter.com/kingfadzi">@kingfadzi</a></p>
    </div>
</div>

<br/>


<div class="row-fluid">
    <div class="span12">
        <img class="about-icon" src="img/blog.png" width="50" style="float: left;">
        <h4>Check out my blog</h4>
        <p><a href="http://www.kingfadzi.com">http://www.kingfadzi.com</a></p>
    </div>
</div>


 <script type="text/javascript">
    var AppView = Backbone.View.extend({
      // el - stands for element. Every view has a element associate in with HTML content will be rendered.
      el: '#container',
      // It's the first function called when this view it's instantiated.
      initialize: function(){
        this.render();
      },
      // $el - it's a cached jQuery object (el), in which you can use jQuery functions to push content. Like the Hello World in this case.
      render: function(){
        this.$el.html("Hello World");
      }
    });

    var appView = new AppView();
  </script>

